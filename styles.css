:root {
    --primary: #2563eb;
    --primary-light: #3b82f6;
    --primary-dark: #1d4ed8;
    --success: #22c55e;
    --danger: #ef4444;
    --gray-50: #f9fafb;
    --gray-100: #f3f4f6;
    --gray-200: #e5e7eb;
    --gray-300: #d1d5db;
    --gray-600: #4b5563;
    --gray-700: #374151;
    --gray-800: #1f2937;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --transition-fast: 0.2s ease;
    --transition-normal: 0.3s ease;
    --transition-slow: 0.5s ease;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    line-height: 1.5;
    background: var(--gray-100);
    color: var(--gray-800);
}

.app {
    display: grid;
    grid-template-columns: 320px 1fr;
    min-height: 100vh;
}

/* 侧边栏样式 */
.sidebar {
    background: white;
    padding: 2rem;
    border-right: 1px solid var(--gray-200);
}

.logo {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 2rem;
    color: var(--primary);
}

.logo i {
    font-size: 1.5rem;
}

.logo h1 {
    font-size: 1.25rem;
    font-weight: 600;
}

/* 表单样式 */
.task-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.form-group {
    display: flex;
    flex-direction: column;
}

.form-group input,
.form-group textarea,
.form-group select {
    padding: 0.75rem;
    border: 1px solid var(--gray-200);
    border-radius: 0.5rem;
    font-size: 0.875rem;
    transition: all var(--transition-fast);
    transform-origin: top;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    transform: scale(1.01);
}

.time-picker {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.time-picker select {
    flex: 1;
    text-align: center;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%234b5563'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 1rem;
    padding-right: 2rem;
}

button {
    padding: 0.75rem;
    background: var(--primary);
    color: white;
    border: none;
    border-radius: 0.5rem;
    font-weight: 500;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    transition: all var(--transition-fast);
    position: relative;
    overflow: hidden;
}

button:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
}

button:active {
    transform: translateY(0);
}

button::after {
    content: '';
    position: absolute;
    background: rgba(255, 255, 255, 0.3);
    width: 100px;
    height: 100px;
    border-radius: 50%;
    transform: scale(0);
    transition: transform var(--transition-normal);
    pointer-events: none;
}

button:active::after {
    transform: scale(2);
    opacity: 0;
    transition: 0s;
}

/* 主内容区域样式 */
.main-content {
    padding: 2rem;
}

.tasks-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
}

.tasks-header h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--gray-800);
}

.view-options {
    display: flex;
    gap: 0.5rem;
}

.view-options button {
    background: white;
    color: var(--gray-600);
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    transition: all var(--transition-fast);
}

.view-options button.active {
    background: var(--primary);
    color: white;
    transform: scale(1.05);
}

.tasks-grid {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

.task-card {
    background: white;
    border-radius: 0.75rem;
    padding: 1.5rem;
    box-shadow: var(--shadow);
    border-left: 4px solid var(--primary);
    transition: all var(--transition-normal);
    animation: slideIn var(--transition-normal);
    transform-origin: center;
    opacity: 0;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.task-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: var(--shadow-md);
}

.task-card.completed {
    border-left-color: var(--success);
    background: var(--gray-50);
    transition: all var(--transition-normal);
}

.task-card h3 {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--gray-800);
}

.task-card p {
    font-size: 0.875rem;
    color: var(--gray-600);
    margin-bottom: 0.5rem;
}

.task-actions {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
}

.task-actions button {
    padding: 0.5rem 1rem;
    font-size: 0.75rem;
}

.complete-btn {
    background: var(--success);
}

.complete-btn:hover {
    background: #16a34a;
}

.delete-btn {
    background: var(--danger);
}

.delete-btn:hover {
    background: #dc2626;
}

@media (max-width: 768px) {
    .app {
        grid-template-columns: 1fr;
    }
    
    .sidebar {
        padding: 1rem;
        border-right: none;
        border-bottom: 1px solid var(--gray-200);
    }
    
    .main-content {
        padding: 1rem;
    }
    
    .tasks-grid {
        grid-template-columns: 1fr;
    }
}

/* 删除动画 */
.task-card.deleting {
    animation: slideOut var(--transition-normal) forwards;
}

@keyframes slideOut {
    to {
        opacity: 0;
        transform: translateX(100%);
    }
}

/* 完成状态切换动画 */
.task-card.completing {
    animation: complete var(--transition-normal);
}

@keyframes complete {
    50% {
        transform: scale(1.05);
    }
}

/* 添加任务时的动画 */
.task-card.adding {
    animation: addTask var(--transition-normal);
}

@keyframes addTask {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
} 